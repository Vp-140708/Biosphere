document.addEventListener("DOMContentLoaded", function () {
    const faqBlocks = document.querySelectorAll(".faq-block");

    faqBlocks.forEach(block => {
        block.addEventListener("click", function () {
            this.classList.toggle("active");
            const answer = this.querySelector(".faq-answer");
            if (this.classList.contains("active")) {
                answer.style.maxHeight = answer.scrollHeight + "px";
            } else {
                answer.style.maxHeight = null;
            }
        });
    });
});

const themeSwitcher = document.getElementById('theme-switcher');
document.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
        document.body.classList.add(savedTheme);
        themeSwitcher.textContent = savedTheme === 'dark-theme' ? 'üåö' : 'üåû';
    }
});

themeSwitcher.addEventListener('click', () => {
    document.body.classList.toggle('dark-theme');
    const currentTheme = document.body.classList.contains('dark-theme') ? 'dark-theme' : 'light-theme';
    themeSwitcher.textContent = currentTheme === 'dark-theme' ? 'üåö' : 'üåû';
    localStorage.setItem('theme', currentTheme);
});

const blocksWrapper = document.querySelector(".blocks-wrapper");
const blocks = document.querySelectorAll(".block-item");
const dots = document.querySelectorAll('.dot');
let currentIndex = 0;
let touchStartX = 0;
let touchEndX = 0;
const threshold = 500;


function goToSlide(index) {
 
    if (index < 0) {
        currentIndex = blocks.length - 1;
    } else if (index >= blocks.length) {
        currentIndex = 0;
    } else {
        currentIndex = index;
    }

    blocksWrapper.scrollTo({
        left: blocks[currentIndex].offsetLeft - 10,
        behavior: "smooth"
    });

    updateDots(currentIndex);
}

// –õ–æ–≥–∏–∫–∞ –¥–ª—è —Å–≤–∞–π–ø–∞
blocksWrapper.addEventListener("touchstart", function (event) {
    touchStartX = event.changedTouches[0].screenX;
});

blocksWrapper.addEventListener("touchmove", function (event) {
    touchEndX = event.changedTouches[0].screenX;
});

blocksWrapper.addEventListener("touchend", function () {
    const swipeDistance = touchEndX - touchStartX;

    if (Math.abs(swipeDistance) > threshold) {
        if (swipeDistance > 0) {
            goToSlide(currentIndex - 1);
        } else {
            goToSlide(currentIndex + 1);
        }
    }
});

updateDots(currentIndex);

const hamburgerMenu = document.querySelector('.hamburger-menu');
const dropdown = document.querySelector('.dropdown');

hamburgerMenu.addEventListener('click', () => {
    dropdown.classList.toggle('active');
});

const slides = document.querySelector('.slides');
let currentSlide = 0;
const totalSlides = document.querySelectorAll('.slide').length;
const slideInterval = 8000;

document.addEventListener("DOMContentLoaded", function () {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–ª–∞–π–¥—ã, —Ç–æ—á–∫–∏ –∏ –æ–±–µ—Ä—Ç–∫—É —Å–ª–∞–π–¥–æ–≤
    const slides = document.querySelectorAll(".slide");
    const dots = document.querySelectorAll(".dot_sl");
    const slidesWrapper = document.querySelector(".slides");
    let currentIndex = 0;
    const totalSlides = slides.length;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ª–∞–π–¥–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
    function showSlide(index) {
        if (index >= totalSlides) {
            currentIndex = 0; // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–µ—Ä–≤–æ–º—É —Å–ª–∞–π–¥—É
        } else if (index < 0) {
            currentIndex = totalSlides - 1; // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–ª–∞–π–¥—É
        } else {
            currentIndex = index; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–∞–π–¥–∞
        }

        // –°–º–µ—â–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
        slidesWrapper.style.transform = `translateX(${-currentIndex * 100}%)`;

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ—á–µ–∫
        updateDots(currentIndex);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ—á–µ–∫
    function updateDots(index) {
        dots.forEach((dot, i) => {
            if (i === index) {
                dot.classList.add("active");
            } else {
                dot.classList.remove("active");
            }
        });
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤ –∫–∞–∂–¥—ã–µ 8 —Å–µ–∫—É–Ω–¥
    function startSlider() {
        setInterval(function () {
            showSlide(currentIndex + 1);
        }, 8000); // –í—Ä–µ–º—è –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏
    }

    // –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–ª–∞–π–¥–æ–≤ —á–µ—Ä–µ–∑ —Ç–æ—á–∫–∏
    dots.forEach((dot, i) => {
        dot.addEventListener("click", function () {
            showSlide(i);
        });
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–∞–π–¥–µ—Ä–∞ —Å –ø–æ–∫–∞–∑–æ–º –ø–µ—Ä–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
    showSlide(0);
    startSlider(); // –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
});
document.addEventListener('DOMContentLoaded', function () {
    const callbackButton = document.getElementById('callbackButton');
    const callbackForm = document.getElementById('callbackForm');
    const cancelButton = document.getElementById('cancelButton');

    let formVisible = false;

    // –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è
    function openForm() {
        callbackForm.classList.add('show');
        callbackForm.classList.remove('hide');
        formVisible = true;
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è
    function closeForm() {
        callbackForm.classList.add('hide');
        callbackForm.classList.remove('show');
        setTimeout(() => {
            callbackForm.style.display = 'none';
            formVisible = false;
        }, 300); // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
    callbackButton.addEventListener('click', function () {
        if (!formVisible) {
            callbackForm.style.display = 'flex';
            openForm();
        } else {
            closeForm();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ "–û—Ç–º–µ–Ω–∞"
    cancelButton.addEventListener('click', function () {
        closeForm();
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ —Ñ–æ—Ä–º—ã
    document.addEventListener('click', function (e) {
        if (!callbackForm.contains(e.target) && !callbackButton.contains(e.target) && formVisible) {
            closeForm();
        }
    });
});
