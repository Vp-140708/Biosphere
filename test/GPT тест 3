<div class="carousel-container">
    <div class="carousel-wrapper">
        <div class="carousel-content">
            <!-- Повторите этот блок 10 раз -->
            <a href="#" class="carousel-item">
                <img src="image1.jpg" alt="Image 1">
                <p>Text 1</p>
            </a>
            <!-- Конец повторяющегося блока -->
        </div>
    </div>
    <button class="carousel-control left">&lt;</button>
    <button class="carousel-control right">&gt;</button>
</div>




.carousel-container {
    position: relative;
    width: 100%;
    overflow: hidden;
}

.carousel-wrapper {
    display: flex;
    transition: transform 0.5s ease;
}

.carousel-content {
    display: flex;
}

.carousel-item {
    flex: 0 0 auto;
    width: 150px; /* Ширина каждого блока */
    text-align: center;
    margin: 10px;
}

.carousel-item img {
    width: 100%;
    height: auto;
}

.carousel-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0,0,0,0.5);
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
}

.carousel-control.left {
    left: 0;
}

.carousel-control.right {
    right: 0;
}





document.addEventListener('DOMContentLoaded', function() {
    const leftButton = document.querySelector('.carousel-control.left');
    const rightButton = document.querySelector('.carousel-control.right');
    const carouselWrapper = document.querySelector('.carousel-wrapper');
    const items = document.querySelectorAll('.carousel-item');
    const itemWidth = items[0].offsetWidth + 20; // Ширина элемента + отступы
    let currentOffset = 0;

    leftButton.addEventListener('click', () => {
        if (currentOffset > 0) {
            currentOffset -= itemWidth;
            carouselWrapper.style.transform = `translateX(-${currentOffset}px)`;
        }
    });

    rightButton.addEventListener('click', () => {
        if (currentOffset < (items.length - 1) * itemWidth) {
            currentOffset += itemWidth;
            carouselWrapper.style.transform = `translateX(-${currentOffset}px)`;
        }
    });
});
